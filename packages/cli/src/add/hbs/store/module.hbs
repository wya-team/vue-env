{{#if isBasic}}
const initialState = {
	data: ''
};
const mutations = {
	{{mutationPrefix}}_GET_SUCCESS(state, { data, param }) {
		state.data = {
			...data
		};
	}
};
{{/if}}
{{#if isPagingBasic}}
import { initPage } from '@utils/utils';

const initialState = {
	listInfo: {
		...initPage
	}
};

const mutations = {
	{{mutationPrefix}}_LIST_GET_SUCCESS(state, { data, param: { page } }) {
		state.listInfo = {
			...state.listInfo,
			...data.page,
			data: {
				...state.listInfo.data,
				[page]: data.list
			}
		};
	},
	{{mutationPrefix}}_LIST_RESET(state, payload) {
		state.listInfo = {
			...initPage,
			reset: true
		};
	},
	{{mutationPrefix}}_LIST_INIT(state, payload) {
		state.listInfo = {
			...initPage
		};
	},
	{{mutationPrefix}}_ROUTE_CHANGE(state) {
		state.listInfo = {
			...initPage
		};
	}
};
{{else}}
import { initPage } from '@utils/utils';

const initialState = {
	'1': {
		...initPage
	},
	'2': {
		...initPage
	},
	'3': {
		...initPage
	},
};

const mutations = {
	{{mutationPrefix}}_LIST_GET_SUCCESS(state, { data, param: { type, page } }) {
		state.listInfo = {
			...state.listInfo,
			[type]: {
				...state.listInfo[type],
				...data.page,
				data: {
					...state.listInfo[type].data,
					[page]: data.list
				}
			}
		};
	},
	{{mutationPrefix}}_LIST_RESET(state, { type }) {
		state.listInfo = {
			...initialState.listInfo,
			[type]: {
				...initPage,
				reset: true
			}
		};
	},
	{{mutationPrefix}}_LIST_INIT(state, payload) {
		state.listInfo = {
			...initialState.listInfo
		};
	},
	{{mutationPrefix}}_ROUTE_CHANGE(state) {
		state.listInfo = {
			...initialState.listInfo
		};
	}
};
{{/if}}

export const {{stateName}} = {
	state: { ...initialState },
	mutations,
};